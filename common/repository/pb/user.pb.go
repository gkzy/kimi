// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// RegisterDeviceReq 注册设备请求
type RegisterDeviceReq struct {
	Type                 int32    `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Brand                string   `protobuf:"bytes,3,opt,name=brand,proto3" json:"brand,omitempty"`
	Model                string   `protobuf:"bytes,4,opt,name=model,proto3" json:"model,omitempty"`
	SystemVersion        string   `protobuf:"bytes,5,opt,name=system_version,json=systemVersion,proto3" json:"system_version,omitempty"`
	SdkVersion           string   `protobuf:"bytes,6,opt,name=sdk_version,json=sdkVersion,proto3" json:"sdk_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterDeviceReq) Reset()         { *m = RegisterDeviceReq{} }
func (m *RegisterDeviceReq) String() string { return proto.CompactTextString(m) }
func (*RegisterDeviceReq) ProtoMessage()    {}
func (*RegisterDeviceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{0}
}

func (m *RegisterDeviceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterDeviceReq.Unmarshal(m, b)
}
func (m *RegisterDeviceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterDeviceReq.Marshal(b, m, deterministic)
}
func (m *RegisterDeviceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterDeviceReq.Merge(m, src)
}
func (m *RegisterDeviceReq) XXX_Size() int {
	return xxx_messageInfo_RegisterDeviceReq.Size(m)
}
func (m *RegisterDeviceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterDeviceReq.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterDeviceReq proto.InternalMessageInfo

func (m *RegisterDeviceReq) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *RegisterDeviceReq) GetBrand() string {
	if m != nil {
		return m.Brand
	}
	return ""
}

func (m *RegisterDeviceReq) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *RegisterDeviceReq) GetSystemVersion() string {
	if m != nil {
		return m.SystemVersion
	}
	return ""
}

func (m *RegisterDeviceReq) GetSdkVersion() string {
	if m != nil {
		return m.SdkVersion
	}
	return ""
}

type RegisterDeviceResp struct {
	DeviceId             int64    `protobuf:"varint,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterDeviceResp) Reset()         { *m = RegisterDeviceResp{} }
func (m *RegisterDeviceResp) String() string { return proto.CompactTextString(m) }
func (*RegisterDeviceResp) ProtoMessage()    {}
func (*RegisterDeviceResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{1}
}

func (m *RegisterDeviceResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterDeviceResp.Unmarshal(m, b)
}
func (m *RegisterDeviceResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterDeviceResp.Marshal(b, m, deterministic)
}
func (m *RegisterDeviceResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterDeviceResp.Merge(m, src)
}
func (m *RegisterDeviceResp) XXX_Size() int {
	return xxx_messageInfo_RegisterDeviceResp.Size(m)
}
func (m *RegisterDeviceResp) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterDeviceResp.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterDeviceResp proto.InternalMessageInfo

func (m *RegisterDeviceResp) GetDeviceId() int64 {
	if m != nil {
		return m.DeviceId
	}
	return 0
}

// SendMessageReq 发送消息请求
type SendMessageReq struct {
	ReceiverType         ReceiverType `protobuf:"varint,1,opt,name=receiver_type,json=receiverType,proto3,enum=pb.ReceiverType" json:"receiver_type,omitempty"`
	ReceiverId           int64        `protobuf:"varint,2,opt,name=receiver_id,json=receiverId,proto3" json:"receiver_id,omitempty"`
	ToUserIds            []int64      `protobuf:"varint,3,rep,packed,name=to_user_ids,json=toUserIds,proto3" json:"to_user_ids,omitempty"`
	MessageType          MessageType  `protobuf:"varint,4,opt,name=message_type,json=messageType,proto3,enum=pb.MessageType" json:"message_type,omitempty"`
	MessageContent       []byte       `protobuf:"bytes,5,opt,name=message_content,json=messageContent,proto3" json:"message_content,omitempty"`
	SendTime             int64        `protobuf:"varint,6,opt,name=send_time,json=sendTime,proto3" json:"send_time,omitempty"`
	IsPersist            bool         `protobuf:"varint,7,opt,name=is_persist,json=isPersist,proto3" json:"is_persist,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SendMessageReq) Reset()         { *m = SendMessageReq{} }
func (m *SendMessageReq) String() string { return proto.CompactTextString(m) }
func (*SendMessageReq) ProtoMessage()    {}
func (*SendMessageReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{2}
}

func (m *SendMessageReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendMessageReq.Unmarshal(m, b)
}
func (m *SendMessageReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendMessageReq.Marshal(b, m, deterministic)
}
func (m *SendMessageReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMessageReq.Merge(m, src)
}
func (m *SendMessageReq) XXX_Size() int {
	return xxx_messageInfo_SendMessageReq.Size(m)
}
func (m *SendMessageReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMessageReq.DiscardUnknown(m)
}

var xxx_messageInfo_SendMessageReq proto.InternalMessageInfo

func (m *SendMessageReq) GetReceiverType() ReceiverType {
	if m != nil {
		return m.ReceiverType
	}
	return ReceiverType_RT_UNKNOWN
}

func (m *SendMessageReq) GetReceiverId() int64 {
	if m != nil {
		return m.ReceiverId
	}
	return 0
}

func (m *SendMessageReq) GetToUserIds() []int64 {
	if m != nil {
		return m.ToUserIds
	}
	return nil
}

func (m *SendMessageReq) GetMessageType() MessageType {
	if m != nil {
		return m.MessageType
	}
	return MessageType_MT_UNKNOWN
}

func (m *SendMessageReq) GetMessageContent() []byte {
	if m != nil {
		return m.MessageContent
	}
	return nil
}

func (m *SendMessageReq) GetSendTime() int64 {
	if m != nil {
		return m.SendTime
	}
	return 0
}

func (m *SendMessageReq) GetIsPersist() bool {
	if m != nil {
		return m.IsPersist
	}
	return false
}

// SendMessageResp 发送消息响应
type SendMessageResp struct {
	Seq                  int64    `protobuf:"varint,1,opt,name=seq,proto3" json:"seq,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendMessageResp) Reset()         { *m = SendMessageResp{} }
func (m *SendMessageResp) String() string { return proto.CompactTextString(m) }
func (*SendMessageResp) ProtoMessage()    {}
func (*SendMessageResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{3}
}

func (m *SendMessageResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendMessageResp.Unmarshal(m, b)
}
func (m *SendMessageResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendMessageResp.Marshal(b, m, deterministic)
}
func (m *SendMessageResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMessageResp.Merge(m, src)
}
func (m *SendMessageResp) XXX_Size() int {
	return xxx_messageInfo_SendMessageResp.Size(m)
}
func (m *SendMessageResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMessageResp.DiscardUnknown(m)
}

var xxx_messageInfo_SendMessageResp proto.InternalMessageInfo

func (m *SendMessageResp) GetSeq() int64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

// ConnUserLoginReq 登录 请求
type ConnUserLoginReq struct {
	DeviceId             int64    `protobuf:"varint,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	UserId               int64    `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Token                string   `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	ConnAddr             string   `protobuf:"bytes,4,opt,name=conn_addr,json=connAddr,proto3" json:"conn_addr,omitempty"`
	ConnFd               int64    `protobuf:"varint,5,opt,name=conn_fd,json=connFd,proto3" json:"conn_fd,omitempty"`
	ClientAddr           string   `protobuf:"bytes,6,opt,name=client_addr,json=clientAddr,proto3" json:"client_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnUserLoginReq) Reset()         { *m = ConnUserLoginReq{} }
func (m *ConnUserLoginReq) String() string { return proto.CompactTextString(m) }
func (*ConnUserLoginReq) ProtoMessage()    {}
func (*ConnUserLoginReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{4}
}

func (m *ConnUserLoginReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnUserLoginReq.Unmarshal(m, b)
}
func (m *ConnUserLoginReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnUserLoginReq.Marshal(b, m, deterministic)
}
func (m *ConnUserLoginReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnUserLoginReq.Merge(m, src)
}
func (m *ConnUserLoginReq) XXX_Size() int {
	return xxx_messageInfo_ConnUserLoginReq.Size(m)
}
func (m *ConnUserLoginReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnUserLoginReq.DiscardUnknown(m)
}

var xxx_messageInfo_ConnUserLoginReq proto.InternalMessageInfo

func (m *ConnUserLoginReq) GetDeviceId() int64 {
	if m != nil {
		return m.DeviceId
	}
	return 0
}

func (m *ConnUserLoginReq) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *ConnUserLoginReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *ConnUserLoginReq) GetConnAddr() string {
	if m != nil {
		return m.ConnAddr
	}
	return ""
}

func (m *ConnUserLoginReq) GetConnFd() int64 {
	if m != nil {
		return m.ConnFd
	}
	return 0
}

func (m *ConnUserLoginReq) GetClientAddr() string {
	if m != nil {
		return m.ClientAddr
	}
	return ""
}

// ConnUserLoginResp 登录响应
type ConnUserLoginResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnUserLoginResp) Reset()         { *m = ConnUserLoginResp{} }
func (m *ConnUserLoginResp) String() string { return proto.CompactTextString(m) }
func (*ConnUserLoginResp) ProtoMessage()    {}
func (*ConnUserLoginResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{5}
}

func (m *ConnUserLoginResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnUserLoginResp.Unmarshal(m, b)
}
func (m *ConnUserLoginResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnUserLoginResp.Marshal(b, m, deterministic)
}
func (m *ConnUserLoginResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnUserLoginResp.Merge(m, src)
}
func (m *ConnUserLoginResp) XXX_Size() int {
	return xxx_messageInfo_ConnUserLoginResp.Size(m)
}
func (m *ConnUserLoginResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnUserLoginResp.DiscardUnknown(m)
}

var xxx_messageInfo_ConnUserLoginResp proto.InternalMessageInfo

// OfflineReq 下线请求
type OfflineReq struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DeviceId             int64    `protobuf:"varint,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	ClientAddr           string   `protobuf:"bytes,3,opt,name=client_addr,json=clientAddr,proto3" json:"client_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OfflineReq) Reset()         { *m = OfflineReq{} }
func (m *OfflineReq) String() string { return proto.CompactTextString(m) }
func (*OfflineReq) ProtoMessage()    {}
func (*OfflineReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{6}
}

func (m *OfflineReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OfflineReq.Unmarshal(m, b)
}
func (m *OfflineReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OfflineReq.Marshal(b, m, deterministic)
}
func (m *OfflineReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OfflineReq.Merge(m, src)
}
func (m *OfflineReq) XXX_Size() int {
	return xxx_messageInfo_OfflineReq.Size(m)
}
func (m *OfflineReq) XXX_DiscardUnknown() {
	xxx_messageInfo_OfflineReq.DiscardUnknown(m)
}

var xxx_messageInfo_OfflineReq proto.InternalMessageInfo

func (m *OfflineReq) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *OfflineReq) GetDeviceId() int64 {
	if m != nil {
		return m.DeviceId
	}
	return 0
}

func (m *OfflineReq) GetClientAddr() string {
	if m != nil {
		return m.ClientAddr
	}
	return ""
}

// OfflineResp 下线响应
type OfflineResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OfflineResp) Reset()         { *m = OfflineResp{} }
func (m *OfflineResp) String() string { return proto.CompactTextString(m) }
func (*OfflineResp) ProtoMessage()    {}
func (*OfflineResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{7}
}

func (m *OfflineResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OfflineResp.Unmarshal(m, b)
}
func (m *OfflineResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OfflineResp.Marshal(b, m, deterministic)
}
func (m *OfflineResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OfflineResp.Merge(m, src)
}
func (m *OfflineResp) XXX_Size() int {
	return xxx_messageInfo_OfflineResp.Size(m)
}
func (m *OfflineResp) XXX_DiscardUnknown() {
	xxx_messageInfo_OfflineResp.DiscardUnknown(m)
}

var xxx_messageInfo_OfflineResp proto.InternalMessageInfo

// GetDeviceReq 获取设备请求
type GetDeviceReq struct {
	DeviceId             int64    `protobuf:"varint,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeviceReq) Reset()         { *m = GetDeviceReq{} }
func (m *GetDeviceReq) String() string { return proto.CompactTextString(m) }
func (*GetDeviceReq) ProtoMessage()    {}
func (*GetDeviceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{8}
}

func (m *GetDeviceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceReq.Unmarshal(m, b)
}
func (m *GetDeviceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceReq.Marshal(b, m, deterministic)
}
func (m *GetDeviceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceReq.Merge(m, src)
}
func (m *GetDeviceReq) XXX_Size() int {
	return xxx_messageInfo_GetDeviceReq.Size(m)
}
func (m *GetDeviceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceReq proto.InternalMessageInfo

func (m *GetDeviceReq) GetDeviceId() int64 {
	if m != nil {
		return m.DeviceId
	}
	return 0
}

// GetDeviceResp 获取设备响应
type GetDeviceResp struct {
	Device               *Device  `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeviceResp) Reset()         { *m = GetDeviceResp{} }
func (m *GetDeviceResp) String() string { return proto.CompactTextString(m) }
func (*GetDeviceResp) ProtoMessage()    {}
func (*GetDeviceResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{9}
}

func (m *GetDeviceResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceResp.Unmarshal(m, b)
}
func (m *GetDeviceResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceResp.Marshal(b, m, deterministic)
}
func (m *GetDeviceResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceResp.Merge(m, src)
}
func (m *GetDeviceResp) XXX_Size() int {
	return xxx_messageInfo_GetDeviceResp.Size(m)
}
func (m *GetDeviceResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceResp proto.InternalMessageInfo

func (m *GetDeviceResp) GetDevice() *Device {
	if m != nil {
		return m.Device
	}
	return nil
}

// Device 设备
type Device struct {
	DeviceId             int64    `protobuf:"varint,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	UserId               int64    `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Type                 int32    `protobuf:"varint,3,opt,name=Type,proto3" json:"Type,omitempty"`
	Brand                string   `protobuf:"bytes,4,opt,name=Brand,proto3" json:"Brand,omitempty"`
	Model                string   `protobuf:"bytes,5,opt,name=Model,proto3" json:"Model,omitempty"`
	SystemVersion        string   `protobuf:"bytes,6,opt,name=SystemVersion,proto3" json:"SystemVersion,omitempty"`
	SDKVersion           string   `protobuf:"bytes,7,opt,name=SDKVersion,proto3" json:"SDKVersion,omitempty"`
	Status               int32    `protobuf:"varint,8,opt,name=Status,proto3" json:"Status,omitempty"`
	Created              int64    `protobuf:"varint,9,opt,name=Created,proto3" json:"Created,omitempty"`
	Updated              int64    `protobuf:"varint,10,opt,name=Updated,proto3" json:"Updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Device) Reset()         { *m = Device{} }
func (m *Device) String() string { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()    {}
func (*Device) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{10}
}

func (m *Device) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Device.Unmarshal(m, b)
}
func (m *Device) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Device.Marshal(b, m, deterministic)
}
func (m *Device) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Device.Merge(m, src)
}
func (m *Device) XXX_Size() int {
	return xxx_messageInfo_Device.Size(m)
}
func (m *Device) XXX_DiscardUnknown() {
	xxx_messageInfo_Device.DiscardUnknown(m)
}

var xxx_messageInfo_Device proto.InternalMessageInfo

func (m *Device) GetDeviceId() int64 {
	if m != nil {
		return m.DeviceId
	}
	return 0
}

func (m *Device) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Device) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *Device) GetBrand() string {
	if m != nil {
		return m.Brand
	}
	return ""
}

func (m *Device) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *Device) GetSystemVersion() string {
	if m != nil {
		return m.SystemVersion
	}
	return ""
}

func (m *Device) GetSDKVersion() string {
	if m != nil {
		return m.SDKVersion
	}
	return ""
}

func (m *Device) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Device) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Device) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func init() {
	proto.RegisterType((*RegisterDeviceReq)(nil), "pb.RegisterDeviceReq")
	proto.RegisterType((*RegisterDeviceResp)(nil), "pb.RegisterDeviceResp")
	proto.RegisterType((*SendMessageReq)(nil), "pb.SendMessageReq")
	proto.RegisterType((*SendMessageResp)(nil), "pb.SendMessageResp")
	proto.RegisterType((*ConnUserLoginReq)(nil), "pb.ConnUserLoginReq")
	proto.RegisterType((*ConnUserLoginResp)(nil), "pb.ConnUserLoginResp")
	proto.RegisterType((*OfflineReq)(nil), "pb.OfflineReq")
	proto.RegisterType((*OfflineResp)(nil), "pb.OfflineResp")
	proto.RegisterType((*GetDeviceReq)(nil), "pb.GetDeviceReq")
	proto.RegisterType((*GetDeviceResp)(nil), "pb.GetDeviceResp")
	proto.RegisterType((*Device)(nil), "pb.Device")
}

func init() { proto.RegisterFile("user.proto", fileDescriptor_116e343673f7ffaf) }

var fileDescriptor_116e343673f7ffaf = []byte{
	// 713 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0x5b, 0x6b, 0x1b, 0x3b,
	0x10, 0x66, 0xbd, 0xbe, 0x8e, 0x6f, 0xc9, 0xe4, 0x72, 0x16, 0x1f, 0x4e, 0x8e, 0xd9, 0xb6, 0xd4,
	0xb4, 0x10, 0x5a, 0x87, 0xf6, 0xa9, 0x50, 0x1a, 0x87, 0x96, 0xd0, 0x86, 0x06, 0x39, 0xe9, 0xeb,
	0x62, 0x5b, 0x4a, 0x10, 0x89, 0xb5, 0xca, 0x4a, 0x0e, 0xe4, 0x5f, 0xf4, 0xbd, 0x50, 0xe8, 0x8f,
	0xe8, 0xff, 0x2b, 0xba, 0xf8, 0xb2, 0x4e, 0xc8, 0x43, 0xdf, 0xf6, 0xfb, 0x66, 0xb4, 0x33, 0xf3,
	0xe9, 0x1b, 0x01, 0xcc, 0x14, 0xcb, 0xf6, 0x65, 0x96, 0xea, 0x14, 0x0b, 0x72, 0xdc, 0x01, 0x26,
	0x66, 0x53, 0x87, 0xe3, 0x1f, 0x01, 0x6c, 0x12, 0x76, 0xc9, 0x95, 0x66, 0xd9, 0x11, 0xbb, 0xe5,
	0x13, 0x46, 0xd8, 0x0d, 0x22, 0x14, 0xf5, 0x9d, 0x64, 0x51, 0xa1, 0x1b, 0xf4, 0x4a, 0xc4, 0x7e,
	0xe3, 0x36, 0x94, 0xc6, 0xd9, 0x48, 0xd0, 0x28, 0xec, 0x06, 0xbd, 0x1a, 0x71, 0xc0, 0xb0, 0xd3,
	0x94, 0xb2, 0xeb, 0xa8, 0xe8, 0x58, 0x0b, 0xf0, 0x19, 0xb4, 0xd4, 0x9d, 0xd2, 0x6c, 0x9a, 0xdc,
	0xb2, 0x4c, 0xf1, 0x54, 0x44, 0x25, 0x1b, 0x6e, 0x3a, 0xf6, 0x9b, 0x23, 0xf1, 0x7f, 0xa8, 0x2b,
	0x7a, 0xb5, 0xc8, 0x29, 0xdb, 0x1c, 0x50, 0xf4, 0xca, 0x27, 0xc4, 0xaf, 0x01, 0xd7, 0x9b, 0x53,
	0x12, 0xff, 0x85, 0x1a, 0xb5, 0x28, 0xe1, 0x34, 0x0a, 0xba, 0x41, 0x2f, 0x24, 0x55, 0x47, 0x1c,
	0xd3, 0xf8, 0x57, 0x01, 0x5a, 0x43, 0x26, 0xe8, 0x09, 0x53, 0x6a, 0x74, 0x69, 0xa7, 0x79, 0x03,
	0xcd, 0x8c, 0x4d, 0x18, 0xbf, 0x65, 0x59, 0x62, 0xc7, 0x32, 0x67, 0x5a, 0xfd, 0x8d, 0x7d, 0x39,
	0xde, 0x27, 0x3e, 0x70, 0x76, 0x27, 0x19, 0x69, 0x64, 0x2b, 0xc8, 0x74, 0xb7, 0x38, 0xc6, 0xa9,
	0xd5, 0x22, 0x24, 0x30, 0xa7, 0x8e, 0x29, 0xee, 0x41, 0x5d, 0xa7, 0x89, 0x11, 0x37, 0xe1, 0x54,
	0x45, 0x61, 0x37, 0xec, 0x85, 0xa4, 0xa6, 0xd3, 0x73, 0x65, 0xc2, 0x0a, 0xfb, 0xd0, 0x98, 0xba,
	0x2e, 0x5c, 0xd9, 0xa2, 0x2d, 0xdb, 0x36, 0x65, 0x7d, 0x77, 0xb6, 0x6a, 0x7d, 0xba, 0x04, 0xf8,
	0x1c, 0xda, 0xf3, 0x33, 0x93, 0x54, 0x68, 0x26, 0xb4, 0x95, 0xae, 0x41, 0x5a, 0x9e, 0x1e, 0x38,
	0xd6, 0x88, 0xa0, 0x98, 0xa0, 0x89, 0xe6, 0x53, 0x66, 0x95, 0x0b, 0x49, 0xd5, 0x10, 0x67, 0x7c,
	0xca, 0xf0, 0x3f, 0x00, 0xae, 0x12, 0x69, 0x54, 0x54, 0x3a, 0xaa, 0x74, 0x83, 0x5e, 0x95, 0xd4,
	0xb8, 0x3a, 0x75, 0x44, 0xfc, 0x04, 0xda, 0x39, 0x89, 0x94, 0xc4, 0x0d, 0x08, 0x15, 0xbb, 0xf1,
	0x6a, 0x9a, 0xcf, 0xf8, 0x77, 0x00, 0x1b, 0x83, 0x54, 0x08, 0x33, 0xcd, 0x97, 0xf4, 0x92, 0x0b,
	0x23, 0xe5, 0x63, 0xd2, 0xe3, 0x3f, 0x50, 0xf1, 0x62, 0x78, 0xb1, 0xca, 0x33, 0xab, 0x84, 0x31,
	0x89, 0x4e, 0xaf, 0x98, 0x98, 0x5b, 0xc7, 0x02, 0xf3, 0xaf, 0x49, 0x2a, 0x44, 0x32, 0xa2, 0x34,
	0xf3, 0xf6, 0xa9, 0x1a, 0xe2, 0x03, 0xa5, 0x99, 0xf9, 0x97, 0x0d, 0x5e, 0x50, 0x3b, 0x7f, 0x48,
	0xca, 0x06, 0x7e, 0xa4, 0xe6, 0x56, 0x26, 0xd7, 0x9c, 0x09, 0xed, 0xce, 0x79, 0xcf, 0x38, 0xca,
	0x9c, 0x8c, 0xb7, 0x60, 0x73, 0xad, 0x6d, 0x25, 0xe3, 0x09, 0xc0, 0xd7, 0x8b, 0x8b, 0x6b, 0x2e,
	0xac, 0x21, 0x56, 0x1a, 0x0d, 0x72, 0x8d, 0xe6, 0xc6, 0x2b, 0xac, 0x8d, 0xb7, 0x56, 0x39, 0xbc,
	0x57, 0xb9, 0x09, 0xf5, 0x45, 0x11, 0x25, 0xe3, 0x97, 0xd0, 0xf8, 0xc4, 0xf4, 0x72, 0xa9, 0x1e,
	0xb5, 0xed, 0x01, 0x34, 0x57, 0x92, 0x95, 0xc4, 0x18, 0xca, 0x2e, 0x68, 0x53, 0xeb, 0x7d, 0x30,
	0xb6, 0xf1, 0x71, 0x1f, 0x89, 0xbf, 0x17, 0xa0, 0xec, 0xa8, 0xbf, 0xbc, 0x18, 0x84, 0xa2, 0x71,
	0x9d, 0x9d, 0xa5, 0x44, 0xec, 0xb7, 0xb9, 0xac, 0x43, 0xbb, 0xe7, 0x7e, 0xa3, 0x0f, 0xe7, 0x7b,
	0x7e, 0x62, 0xf7, 0xdc, 0x2d, 0xb2, 0x03, 0xf8, 0x14, 0x9a, 0xc3, 0xd5, 0x8d, 0xf6, 0xd7, 0x91,
	0x27, 0x71, 0x0f, 0x60, 0x78, 0xf4, 0x79, 0x9e, 0x52, 0x71, 0xba, 0x2d, 0x19, 0xdc, 0x85, 0xf2,
	0x50, 0x8f, 0xf4, 0x4c, 0x45, 0x55, 0xdb, 0x87, 0x47, 0x18, 0x41, 0x65, 0x90, 0xb1, 0x91, 0x66,
	0x34, 0xaa, 0xd9, 0xb6, 0xe7, 0xd0, 0x44, 0xce, 0x25, 0xb5, 0x11, 0x70, 0x11, 0x0f, 0xfb, 0x3f,
	0x0b, 0x50, 0x31, 0x57, 0x4f, 0x4e, 0x07, 0xf8, 0x1e, 0x5a, 0xf9, 0xd7, 0x03, 0x77, 0xdc, 0xca,
	0xaf, 0x3d, 0x77, 0x9d, 0xdd, 0x87, 0x68, 0x25, 0xf1, 0x2d, 0xd4, 0x57, 0xf6, 0x04, 0xd1, 0xa4,
	0xe5, 0xdf, 0x96, 0xce, 0xd6, 0x3d, 0x4e, 0x49, 0x7c, 0x07, 0xcd, 0x9c, 0x05, 0x71, 0xdb, 0x64,
	0xad, 0x2f, 0x53, 0x67, 0xe7, 0x01, 0x56, 0x49, 0x7c, 0x01, 0x15, 0x6f, 0x23, 0x6c, 0x99, 0x8c,
	0xa5, 0x71, 0x3b, 0xed, 0x1c, 0x56, 0x12, 0x5f, 0x41, 0x6d, 0x61, 0x1b, 0xb4, 0x0f, 0xda, 0xaa,
	0xe5, 0x3a, 0x9b, 0x6b, 0x8c, 0x92, 0xe3, 0xb2, 0x7d, 0xf7, 0x0f, 0xfe, 0x04, 0x00, 0x00, 0xff,
	0xff, 0x29, 0xe9, 0x87, 0x54, 0x15, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserRPCClient is the client API for UserRPC service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserRPCClient interface {
	// RegisterDevice 注册设备
	RegisterDevice(ctx context.Context, in *RegisterDeviceReq, opts ...grpc.CallOption) (*RegisterDeviceResp, error)
	// SendMessage 发送消息
	SendMessage(ctx context.Context, in *SendMessageReq, opts ...grpc.CallOption) (*SendMessageResp, error)
	// ConnUserLogin 连接登录
	ConnUserLogin(ctx context.Context, in *ConnUserLoginReq, opts ...grpc.CallOption) (*ConnUserLoginResp, error)
	// Offline 设备离线
	Offline(ctx context.Context, in *OfflineReq, opts ...grpc.CallOption) (*OfflineResp, error)
	// GetDevice 获取设备
	GetDevice(ctx context.Context, in *GetDeviceReq, opts ...grpc.CallOption) (*GetDeviceResp, error)
}

type userRPCClient struct {
	cc *grpc.ClientConn
}

func NewUserRPCClient(cc *grpc.ClientConn) UserRPCClient {
	return &userRPCClient{cc}
}

func (c *userRPCClient) RegisterDevice(ctx context.Context, in *RegisterDeviceReq, opts ...grpc.CallOption) (*RegisterDeviceResp, error) {
	out := new(RegisterDeviceResp)
	err := c.cc.Invoke(ctx, "/pb.UserRPC/RegisterDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userRPCClient) SendMessage(ctx context.Context, in *SendMessageReq, opts ...grpc.CallOption) (*SendMessageResp, error) {
	out := new(SendMessageResp)
	err := c.cc.Invoke(ctx, "/pb.UserRPC/SendMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userRPCClient) ConnUserLogin(ctx context.Context, in *ConnUserLoginReq, opts ...grpc.CallOption) (*ConnUserLoginResp, error) {
	out := new(ConnUserLoginResp)
	err := c.cc.Invoke(ctx, "/pb.UserRPC/ConnUserLogin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userRPCClient) Offline(ctx context.Context, in *OfflineReq, opts ...grpc.CallOption) (*OfflineResp, error) {
	out := new(OfflineResp)
	err := c.cc.Invoke(ctx, "/pb.UserRPC/Offline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userRPCClient) GetDevice(ctx context.Context, in *GetDeviceReq, opts ...grpc.CallOption) (*GetDeviceResp, error) {
	out := new(GetDeviceResp)
	err := c.cc.Invoke(ctx, "/pb.UserRPC/GetDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserRPCServer is the server API for UserRPC service.
type UserRPCServer interface {
	// RegisterDevice 注册设备
	RegisterDevice(context.Context, *RegisterDeviceReq) (*RegisterDeviceResp, error)
	// SendMessage 发送消息
	SendMessage(context.Context, *SendMessageReq) (*SendMessageResp, error)
	// ConnUserLogin 连接登录
	ConnUserLogin(context.Context, *ConnUserLoginReq) (*ConnUserLoginResp, error)
	// Offline 设备离线
	Offline(context.Context, *OfflineReq) (*OfflineResp, error)
	// GetDevice 获取设备
	GetDevice(context.Context, *GetDeviceReq) (*GetDeviceResp, error)
}

func RegisterUserRPCServer(s *grpc.Server, srv UserRPCServer) {
	s.RegisterService(&_UserRPC_serviceDesc, srv)
}

func _UserRPC_RegisterDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterDeviceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserRPCServer).RegisterDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserRPC/RegisterDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserRPCServer).RegisterDevice(ctx, req.(*RegisterDeviceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserRPC_SendMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendMessageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserRPCServer).SendMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserRPC/SendMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserRPCServer).SendMessage(ctx, req.(*SendMessageReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserRPC_ConnUserLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnUserLoginReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserRPCServer).ConnUserLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserRPC/ConnUserLogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserRPCServer).ConnUserLogin(ctx, req.(*ConnUserLoginReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserRPC_Offline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OfflineReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserRPCServer).Offline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserRPC/Offline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserRPCServer).Offline(ctx, req.(*OfflineReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserRPC_GetDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserRPCServer).GetDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserRPC/GetDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserRPCServer).GetDevice(ctx, req.(*GetDeviceReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserRPC_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.UserRPC",
	HandlerType: (*UserRPCServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterDevice",
			Handler:    _UserRPC_RegisterDevice_Handler,
		},
		{
			MethodName: "SendMessage",
			Handler:    _UserRPC_SendMessage_Handler,
		},
		{
			MethodName: "ConnUserLogin",
			Handler:    _UserRPC_ConnUserLogin_Handler,
		},
		{
			MethodName: "Offline",
			Handler:    _UserRPC_Offline_Handler,
		},
		{
			MethodName: "GetDevice",
			Handler:    _UserRPC_GetDevice_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}
