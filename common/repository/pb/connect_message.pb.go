// Code generated by protoc-gen-go. DO NOT EDIT.
// source: connect_message.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// DeliverMessageReq 投递消息的请求体
type DeliverMessageReq struct {
	DeviceId             int64        `protobuf:"varint,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Fd                   int64        `protobuf:"varint,2,opt,name=fd,proto3" json:"fd,omitempty"`
	MessageSend          *MessageSend `protobuf:"bytes,3,opt,name=message_send,json=messageSend,proto3" json:"message_send,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *DeliverMessageReq) Reset()         { *m = DeliverMessageReq{} }
func (m *DeliverMessageReq) String() string { return proto.CompactTextString(m) }
func (*DeliverMessageReq) ProtoMessage()    {}
func (*DeliverMessageReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b53b3bc6a543e956, []int{0}
}

func (m *DeliverMessageReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeliverMessageReq.Unmarshal(m, b)
}
func (m *DeliverMessageReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeliverMessageReq.Marshal(b, m, deterministic)
}
func (m *DeliverMessageReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeliverMessageReq.Merge(m, src)
}
func (m *DeliverMessageReq) XXX_Size() int {
	return xxx_messageInfo_DeliverMessageReq.Size(m)
}
func (m *DeliverMessageReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeliverMessageReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeliverMessageReq proto.InternalMessageInfo

func (m *DeliverMessageReq) GetDeviceId() int64 {
	if m != nil {
		return m.DeviceId
	}
	return 0
}

func (m *DeliverMessageReq) GetFd() int64 {
	if m != nil {
		return m.Fd
	}
	return 0
}

func (m *DeliverMessageReq) GetMessageSend() *MessageSend {
	if m != nil {
		return m.MessageSend
	}
	return nil
}

// DeliverMessageResp 投递消息的响应
type DeliverMessageResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeliverMessageResp) Reset()         { *m = DeliverMessageResp{} }
func (m *DeliverMessageResp) String() string { return proto.CompactTextString(m) }
func (*DeliverMessageResp) ProtoMessage()    {}
func (*DeliverMessageResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b53b3bc6a543e956, []int{1}
}

func (m *DeliverMessageResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeliverMessageResp.Unmarshal(m, b)
}
func (m *DeliverMessageResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeliverMessageResp.Marshal(b, m, deterministic)
}
func (m *DeliverMessageResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeliverMessageResp.Merge(m, src)
}
func (m *DeliverMessageResp) XXX_Size() int {
	return xxx_messageInfo_DeliverMessageResp.Size(m)
}
func (m *DeliverMessageResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeliverMessageResp.DiscardUnknown(m)
}

var xxx_messageInfo_DeliverMessageResp proto.InternalMessageInfo

func init() {
	proto.RegisterType((*DeliverMessageReq)(nil), "pb.DeliverMessageReq")
	proto.RegisterType((*DeliverMessageResp)(nil), "pb.DeliverMessageResp")
}

func init() { proto.RegisterFile("connect_message.proto", fileDescriptor_b53b3bc6a543e956) }

var fileDescriptor_b53b3bc6a543e956 = []byte{
	// 186 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4d, 0xce, 0xcf, 0xcb,
	0x4b, 0x4d, 0x2e, 0x89, 0xcf, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0xd5, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x17, 0x62, 0x2a, 0x48, 0x92, 0xe2, 0x45, 0x11, 0x52, 0x2a, 0xe1, 0x12, 0x74, 0x49, 0xcd,
	0xc9, 0x2c, 0x4b, 0x2d, 0xf2, 0x85, 0x88, 0x07, 0xa5, 0x16, 0x0a, 0x49, 0x73, 0x71, 0xa6, 0xa4,
	0x96, 0x65, 0x26, 0xa7, 0xc6, 0x67, 0xa6, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0x30, 0x07, 0x71, 0x40,
	0x04, 0x3c, 0x53, 0x84, 0xf8, 0xb8, 0x98, 0xd2, 0x52, 0x24, 0x98, 0xc0, 0xa2, 0x4c, 0x69, 0x29,
	0x42, 0x46, 0x5c, 0x3c, 0x50, 0x23, 0xe3, 0x8b, 0x53, 0xf3, 0x52, 0x24, 0x98, 0x15, 0x18, 0x35,
	0xb8, 0x8d, 0xf8, 0xf5, 0x0a, 0x92, 0xf4, 0xa0, 0x46, 0x06, 0xa7, 0xe6, 0xa5, 0x04, 0x71, 0xe7,
	0x22, 0x38, 0x4a, 0x22, 0x5c, 0x42, 0xe8, 0xb6, 0x16, 0x17, 0x18, 0xf9, 0x71, 0x71, 0x3b, 0xe7,
	0xe7, 0xe5, 0x41, 0x85, 0x84, 0xec, 0xb9, 0xf8, 0x50, 0x15, 0x09, 0x89, 0x82, 0x0c, 0xc5, 0x70,
	0xae, 0x94, 0x18, 0x36, 0xe1, 0xe2, 0x82, 0x24, 0x36, 0xb0, 0x17, 0x8d, 0x01, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x5f, 0x5f, 0x18, 0x18, 0x0e, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ConnMessageClient is the client API for ConnMessage service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConnMessageClient interface {
	// DeliverMessage 消息投递
	DeliverMessage(ctx context.Context, in *DeliverMessageReq, opts ...grpc.CallOption) (*DeliverMessageResp, error)
}

type connMessageClient struct {
	cc *grpc.ClientConn
}

func NewConnMessageClient(cc *grpc.ClientConn) ConnMessageClient {
	return &connMessageClient{cc}
}

func (c *connMessageClient) DeliverMessage(ctx context.Context, in *DeliverMessageReq, opts ...grpc.CallOption) (*DeliverMessageResp, error) {
	out := new(DeliverMessageResp)
	err := c.cc.Invoke(ctx, "/pb.ConnMessage/DeliverMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConnMessageServer is the server API for ConnMessage service.
type ConnMessageServer interface {
	// DeliverMessage 消息投递
	DeliverMessage(context.Context, *DeliverMessageReq) (*DeliverMessageResp, error)
}

func RegisterConnMessageServer(s *grpc.Server, srv ConnMessageServer) {
	s.RegisterService(&_ConnMessage_serviceDesc, srv)
}

func _ConnMessage_DeliverMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeliverMessageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnMessageServer).DeliverMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ConnMessage/DeliverMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnMessageServer).DeliverMessage(ctx, req.(*DeliverMessageReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _ConnMessage_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.ConnMessage",
	HandlerType: (*ConnMessageServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DeliverMessage",
			Handler:    _ConnMessage_DeliverMessage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "connect_message.proto",
}
